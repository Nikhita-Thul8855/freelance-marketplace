{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"אותיות\",\n      verb: \"לכלול\"\n    },\n    file: {\n      unit: \"בייטים\",\n      verb: \"לכלול\"\n    },\n    array: {\n      unit: \"פריטים\",\n      verb: \"לכלול\"\n    },\n    set: {\n      unit: \"פריטים\",\n      verb: \"לכלול\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"number\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"array\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"קלט\",\n    email: \"כתובת אימייל\",\n    url: \"כתובת רשת\",\n    emoji: \"אימוג'י\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"תאריך וזמן ISO\",\n    date: \"תאריך ISO\",\n    time: \"זמן ISO\",\n    duration: \"משך זמן ISO\",\n    ipv4: \"כתובת IPv4\",\n    ipv6: \"כתובת IPv6\",\n    cidrv4: \"טווח IPv4\",\n    cidrv6: \"טווח IPv6\",\n    base64: \"מחרוזת בבסיס 64\",\n    base64url: \"מחרוזת בבסיס 64 לכתובות רשת\",\n    json_string: \"מחרוזת JSON\",\n    e164: \"מספר E.164\",\n    jwt: \"JWT\",\n    template_literal: \"קלט\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"\\u05E7\\u05DC\\u05D8 \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF: \\u05E6\\u05E8\\u05D9\\u05DA \".concat(issue.expected, \", \\u05D4\\u05EA\\u05E7\\u05D1\\u05DC \").concat(parsedType(issue.input));\n      // return `Invalid input: expected ${issue.expected}, received ${util.getParsedType(issue.input)}`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"\\u05E7\\u05DC\\u05D8 \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF: \\u05E6\\u05E8\\u05D9\\u05DA \".concat(util.stringifyPrimitive(issue.values[0]));\n        return \"\\u05E7\\u05DC\\u05D8 \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF: \\u05E6\\u05E8\\u05D9\\u05DA \\u05D0\\u05D7\\u05EA \\u05DE\\u05D4\\u05D0\\u05E4\\u05E9\\u05E8\\u05D5\\u05D9\\u05D5\\u05EA  \".concat(util.joinValues(issue.values, \"|\"));\n      case \"too_big\":\n        {\n          var _issue$origin, _sizing$unit, _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return \"\\u05D2\\u05D3\\u05D5\\u05DC \\u05DE\\u05D3\\u05D9: \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"value\", \" \\u05E6\\u05E8\\u05D9\\u05DA \\u05DC\\u05D4\\u05D9\\u05D5\\u05EA \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"elements\");\n          return \"\\u05D2\\u05D3\\u05D5\\u05DC \\u05DE\\u05D3\\u05D9: \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"value\", \" \\u05E6\\u05E8\\u05D9\\u05DA \\u05DC\\u05D4\\u05D9\\u05D5\\u05EA \").concat(adj).concat(issue.maximum.toString());\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"\\u05E7\\u05D8\\u05DF \\u05DE\\u05D3\\u05D9: \".concat(issue.origin, \" \\u05E6\\u05E8\\u05D9\\u05DA \\u05DC\\u05D4\\u05D9\\u05D5\\u05EA \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit);\n          }\n          return \"\\u05E7\\u05D8\\u05DF \\u05DE\\u05D3\\u05D9: \".concat(issue.origin, \" \\u05E6\\u05E8\\u05D9\\u05DA \\u05DC\\u05D4\\u05D9\\u05D5\\u05EA \").concat(adj).concat(issue.minimum.toString());\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return \"\\u05DE\\u05D7\\u05E8\\u05D5\\u05D6\\u05EA \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05E0\\u05D4: \\u05D7\\u05D9\\u05D9\\u05D1\\u05EA \\u05DC\\u05D4\\u05EA\\u05D7\\u05D9\\u05DC \\u05D1\\\"\".concat(_issue.prefix, \"\\\"\");\n          if (_issue.format === \"ends_with\") return \"\\u05DE\\u05D7\\u05E8\\u05D5\\u05D6\\u05EA \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05E0\\u05D4: \\u05D7\\u05D9\\u05D9\\u05D1\\u05EA \\u05DC\\u05D4\\u05E1\\u05EA\\u05D9\\u05D9\\u05DD \\u05D1 \\\"\".concat(_issue.suffix, \"\\\"\");\n          if (_issue.format === \"includes\") return \"\\u05DE\\u05D7\\u05E8\\u05D5\\u05D6\\u05EA \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05E0\\u05D4: \\u05D7\\u05D9\\u05D9\\u05D1\\u05EA \\u05DC\\u05DB\\u05DC\\u05D5\\u05DC \\\"\".concat(_issue.includes, \"\\\"\");\n          if (_issue.format === \"regex\") return \"\\u05DE\\u05D7\\u05E8\\u05D5\\u05D6\\u05EA \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05E0\\u05D4: \\u05D7\\u05D9\\u05D9\\u05D1\\u05EA \\u05DC\\u05D4\\u05EA\\u05D0\\u05D9\\u05DD \\u05DC\\u05EA\\u05D1\\u05E0\\u05D9\\u05EA \".concat(_issue.pattern);\n          return \"\".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format, \" \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF\");\n        }\n      case \"not_multiple_of\":\n        return \"\\u05DE\\u05E1\\u05E4\\u05E8 \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF: \\u05D7\\u05D9\\u05D9\\u05D1 \\u05DC\\u05D4\\u05D9\\u05D5\\u05EA \\u05DE\\u05DB\\u05E4\\u05DC\\u05D4 \\u05E9\\u05DC \".concat(issue.divisor);\n      case \"unrecognized_keys\":\n        return \"\\u05DE\\u05E4\\u05EA\\u05D7\".concat(issue.keys.length > 1 ? \"ות\" : \"\", \" \\u05DC\\u05D0 \\u05DE\\u05D6\\u05D5\\u05D4\").concat(issue.keys.length > 1 ? \"ים\" : \"ה\", \": \").concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"\\u05DE\\u05E4\\u05EA\\u05D7 \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF \\u05D1\".concat(issue.origin);\n      case \"invalid_union\":\n        return \"קלט לא תקין\";\n      case \"invalid_element\":\n        return \"\\u05E2\\u05E8\\u05DA \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF \\u05D1\".concat(issue.origin);\n      default:\n        return \"\\u05E7\\u05DC\\u05D8 \\u05DC\\u05D0 \\u05EA\\u05E7\\u05D9\\u05DF\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}