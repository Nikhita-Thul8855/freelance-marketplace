{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\freelance-marketplace\\\\client\\\\src\\\\components\\\\RealTimeChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport socketService from '../services/socketService';\nimport messageService from '../services/messageService';\nimport './RealTimeChat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RealTimeChat = ({\n  otherUser,\n  onClose\n}) => {\n  _s();\n  const {\n    user,\n    token\n  } = useAuth();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [otherUserTyping, setOtherUserTyping] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [sending, setSending] = useState(false);\n  const messagesEndRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  // Safety check for required props\n  if (!otherUser || !otherUser._id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"real-time-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chat Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Unable to load chat. User information is missing.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Auto scroll to bottom\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Initialize socket connection and load messages\n  useEffect(() => {\n    if (!user || !otherUser || !token) return;\n    console.log('🚀 Initializing real-time chat...');\n    console.log('Current user:', user.name);\n    console.log('Other user:', otherUser.name);\n\n    // Connect to socket\n    try {\n      socketService.connect(token);\n\n      // Join conversation room\n      socketService.joinConversation(otherUser._id);\n\n      // Load existing messages\n      loadMessages();\n\n      // Setup event listeners\n      setupSocketListeners();\n    } catch (error) {\n      console.error('❌ Failed to initialize chat:', error);\n      setConnectionStatus('error');\n    }\n    return () => {\n      // Cleanup\n      socketService.leaveConversation(otherUser._id);\n      cleanupSocketListeners();\n    };\n  }, [user, otherUser, token]);\n\n  // Load existing messages\n  const loadMessages = async () => {\n    try {\n      console.log('📥 Loading existing messages...');\n      const result = await messageService.getConversationMessages(otherUser._id);\n      if (result.success) {\n        var _result$data;\n        console.log('✅ Messages loaded:', ((_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.length) || 0);\n        // Filter out any undefined or malformed messages\n        const validMessages = (result.data || []).filter(msg => msg && (msg._id || msg.messageId) && msg.content);\n        setMessages(validMessages);\n      } else {\n        console.error('❌ Failed to load messages:', result.error);\n        setMessages([]);\n      }\n    } catch (error) {\n      console.error('❌ Error loading messages:', error);\n      setMessages([]);\n    }\n  };\n\n  // Setup socket event listeners\n  const setupSocketListeners = () => {\n    // Connection status\n    socketService.on('connected', () => {\n      console.log('✅ Chat connected');\n      setConnectionStatus('connected');\n    });\n    socketService.on('disconnected', () => {\n      console.log('🔴 Chat disconnected');\n      setConnectionStatus('disconnected');\n    });\n    socketService.on('connect_error', () => {\n      console.log('❌ Chat connection error');\n      setConnectionStatus('error');\n    });\n\n    // New messages\n    socketService.on('new-message', data => {\n      console.log('📨 Received new message:', data);\n      if (data.success && data.message) {\n        setMessages(prev => {\n          // Check if message already exists to avoid duplicates\n          const messageId = data.message._id || data.message.messageId;\n          if (!messageId) {\n            console.warn('⚠️ Received message without ID:', data.message);\n            return prev;\n          }\n          const exists = prev.some(msg => msg && (msg._id === messageId || msg.messageId === messageId));\n          if (exists) return prev;\n          return [...prev, data.message];\n        });\n      }\n    });\n\n    // Typing indicators\n    socketService.on('user-typing', data => {\n      if (data.userId === otherUser._id) {\n        console.log('⌨️ Other user is typing');\n        setOtherUserTyping(true);\n      }\n    });\n    socketService.on('user-stop-typing', data => {\n      if (data.userId === otherUser._id) {\n        console.log('⌨️ Other user stopped typing');\n        setOtherUserTyping(false);\n      }\n    });\n\n    // Message read receipts\n    socketService.on('message-read', data => {\n      console.log('✅ Message read receipt:', data);\n      setMessages(prev => prev.map(msg => msg._id === data.messageId ? {\n        ...msg,\n        status: 'read',\n        readAt: data.readAt\n      } : msg));\n    });\n  };\n\n  // Cleanup socket listeners\n  const cleanupSocketListeners = () => {\n    socketService.off('connected');\n    socketService.off('disconnected');\n    socketService.off('connect_error');\n    socketService.off('new-message');\n    socketService.off('user-typing');\n    socketService.off('user-stop-typing');\n    socketService.off('message-read');\n  };\n\n  // Handle sending messages\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || sending) return;\n    const messageContent = newMessage.trim();\n    setNewMessage('');\n    setSending(true);\n    try {\n      console.log('📤 Sending message via Socket.io...');\n\n      // Send via socket for real-time delivery\n      if (socketService.isConnected()) {\n        await socketService.sendMessage(otherUser._id, messageContent);\n        console.log('✅ Message sent via Socket.io');\n      } else {\n        // Fallback to HTTP API\n        console.log('📡 Socket not connected, using HTTP API...');\n        const result = await messageService.sendMessage(otherUser._id, messageContent);\n        if (result.success) {\n          setMessages(prev => [...prev, result.data]);\n        } else {\n          throw new Error(result.error);\n        }\n      }\n\n      // Stop typing\n      socketService.stopTyping(otherUser._id);\n      setIsTyping(false);\n    } catch (error) {\n      console.error('❌ Failed to send message:', error);\n      // Restore message on error\n      setNewMessage(messageContent);\n      alert('Failed to send message. Please try again.');\n    } finally {\n      setSending(false);\n    }\n  };\n\n  // Handle typing indicators\n  const handleTyping = e => {\n    setNewMessage(e.target.value);\n    if (!isTyping && e.target.value.trim()) {\n      setIsTyping(true);\n      socketService.startTyping(otherUser._id);\n    }\n\n    // Clear existing timeout\n    if (typingTimeoutRef.current) {\n      clearTimeout(typingTimeoutRef.current);\n    }\n\n    // Set new timeout\n    typingTimeoutRef.current = setTimeout(() => {\n      if (isTyping) {\n        setIsTyping(false);\n        socketService.stopTyping(otherUser._id);\n      }\n    }, 2000);\n  };\n\n  // Format message time\n  const formatTime = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  // Get connection status display\n  const getConnectionStatusDisplay = () => {\n    switch (connectionStatus) {\n      case 'connected':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-connected\",\n          children: \"\\uD83D\\uDFE2 Real-time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 16\n        }, this);\n      case 'disconnected':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-disconnected\",\n          children: \"\\uD83D\\uDD34 Disconnected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-error\",\n          children: \"\\u274C Connection Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status-connecting\",\n          children: \"\\uD83D\\uDFE1 Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"realtime-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: otherUser.avatar || '/default-avatar.png',\n          alt: otherUser.name,\n          className: \"user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: otherUser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"user-role\",\n            children: otherUser.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-status\",\n        children: getConnectionStatusDisplay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start your conversation with \", otherUser.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this) : messages.filter(message => message && (message._id || message.messageId)).map(message => {\n        var _message$senderId, _message$sender;\n        // Safe way to get sender ID with null checks\n        const senderId = ((_message$senderId = message.senderId) === null || _message$senderId === void 0 ? void 0 : _message$senderId._id) || message.senderId || ((_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender._id) || message.sender;\n        const isSentByMe = senderId === user.id || senderId === user._id;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${isSentByMe ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.content || 'Message content unavailable'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: formatTime(message.createdAt || message.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), isSentByMe ? /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `message-status ${message.status || 'sent'}`,\n                children: message.status === 'read' ? '✓✓' : '✓'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 23\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)\n        }, message._id || message.messageId || Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }, this);\n      }), otherUserTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-dots\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [otherUser.name, \" is typing...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"message-form\",\n      onSubmit: handleSendMessage,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: handleTyping,\n          placeholder: \"Type your message...\",\n          disabled: sending,\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !newMessage.trim() || sending,\n          className: \"send-btn\",\n          children: sending ? '⏳' : '📤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n_s(RealTimeChat, \"ugUO0sHd7QGys9BLJGkfbzOc3Mc=\", false, function () {\n  return [useAuth];\n});\n_c = RealTimeChat;\nexport default RealTimeChat;\nvar _c;\n$RefreshReg$(_c, \"RealTimeChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useAuth","socketService","messageService","jsxDEV","_jsxDEV","RealTimeChat","otherUser","onClose","_s","user","token","messages","setMessages","newMessage","setNewMessage","isTyping","setIsTyping","otherUserTyping","setOtherUserTyping","connectionStatus","setConnectionStatus","sending","setSending","messagesEndRef","typingTimeoutRef","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","console","log","name","connect","joinConversation","loadMessages","setupSocketListeners","error","leaveConversation","cleanupSocketListeners","result","getConversationMessages","success","_result$data","data","length","validMessages","filter","msg","messageId","content","on","message","prev","warn","exists","some","userId","map","status","readAt","off","handleSendMessage","e","preventDefault","trim","messageContent","isConnected","sendMessage","Error","stopTyping","alert","handleTyping","target","value","startTyping","clearTimeout","setTimeout","formatTime","dateString","date","Date","toLocaleTimeString","hour","minute","getConnectionStatusDisplay","src","avatar","alt","role","_message$senderId","_message$sender","senderId","sender","isSentByMe","id","createdAt","timestamp","Math","random","ref","onSubmit","type","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/PC/freelance-marketplace/client/src/components/RealTimeChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport socketService from '../services/socketService';\r\nimport messageService from '../services/messageService';\r\nimport './RealTimeChat.css';\r\n\r\nconst RealTimeChat = ({ otherUser, onClose }) => {\r\n  const { user, token } = useAuth();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [otherUserTyping, setOtherUserTyping] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n  const [sending, setSending] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  // Safety check for required props\r\n  if (!otherUser || !otherUser._id) {\r\n    return (\r\n      <div className=\"real-time-chat\">\r\n        <div className=\"chat-header\">\r\n          <h3>Chat Error</h3>\r\n          <button onClick={onClose} className=\"close-button\">✕</button>\r\n        </div>\r\n        <div className=\"messages-container\">\r\n          <div className=\"no-messages\">\r\n            <p>Unable to load chat. User information is missing.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Auto scroll to bottom\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Initialize socket connection and load messages\r\n  useEffect(() => {\r\n    if (!user || !otherUser || !token) return;\r\n\r\n    console.log('🚀 Initializing real-time chat...');\r\n    console.log('Current user:', user.name);\r\n    console.log('Other user:', otherUser.name);\r\n\r\n    // Connect to socket\r\n    try {\r\n      socketService.connect(token);\r\n      \r\n      // Join conversation room\r\n      socketService.joinConversation(otherUser._id);\r\n\r\n      // Load existing messages\r\n      loadMessages();\r\n\r\n      // Setup event listeners\r\n      setupSocketListeners();\r\n\r\n    } catch (error) {\r\n      console.error('❌ Failed to initialize chat:', error);\r\n      setConnectionStatus('error');\r\n    }\r\n\r\n    return () => {\r\n      // Cleanup\r\n      socketService.leaveConversation(otherUser._id);\r\n      cleanupSocketListeners();\r\n    };\r\n  }, [user, otherUser, token]);\r\n\r\n  // Load existing messages\r\n  const loadMessages = async () => {\r\n    try {\r\n      console.log('📥 Loading existing messages...');\r\n      const result = await messageService.getConversationMessages(otherUser._id);\r\n      \r\n      if (result.success) {\r\n        console.log('✅ Messages loaded:', result.data?.length || 0);\r\n        // Filter out any undefined or malformed messages\r\n        const validMessages = (result.data || []).filter(msg => \r\n          msg && (msg._id || msg.messageId) && msg.content\r\n        );\r\n        setMessages(validMessages);\r\n      } else {\r\n        console.error('❌ Failed to load messages:', result.error);\r\n        setMessages([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error loading messages:', error);\r\n      setMessages([]);\r\n    }\r\n  };\r\n\r\n  // Setup socket event listeners\r\n  const setupSocketListeners = () => {\r\n    // Connection status\r\n    socketService.on('connected', () => {\r\n      console.log('✅ Chat connected');\r\n      setConnectionStatus('connected');\r\n    });\r\n\r\n    socketService.on('disconnected', () => {\r\n      console.log('🔴 Chat disconnected');\r\n      setConnectionStatus('disconnected');\r\n    });\r\n\r\n    socketService.on('connect_error', () => {\r\n      console.log('❌ Chat connection error');\r\n      setConnectionStatus('error');\r\n    });\r\n\r\n    // New messages\r\n    socketService.on('new-message', (data) => {\r\n      console.log('📨 Received new message:', data);\r\n      if (data.success && data.message) {\r\n        setMessages(prev => {\r\n          // Check if message already exists to avoid duplicates\r\n          const messageId = data.message._id || data.message.messageId;\r\n          if (!messageId) {\r\n            console.warn('⚠️ Received message without ID:', data.message);\r\n            return prev;\r\n          }\r\n          \r\n          const exists = prev.some(msg => \r\n            msg && (msg._id === messageId || msg.messageId === messageId)\r\n          );\r\n          if (exists) return prev;\r\n          \r\n          return [...prev, data.message];\r\n        });\r\n      }\r\n    });\r\n\r\n    // Typing indicators\r\n    socketService.on('user-typing', (data) => {\r\n      if (data.userId === otherUser._id) {\r\n        console.log('⌨️ Other user is typing');\r\n        setOtherUserTyping(true);\r\n      }\r\n    });\r\n\r\n    socketService.on('user-stop-typing', (data) => {\r\n      if (data.userId === otherUser._id) {\r\n        console.log('⌨️ Other user stopped typing');\r\n        setOtherUserTyping(false);\r\n      }\r\n    });\r\n\r\n    // Message read receipts\r\n    socketService.on('message-read', (data) => {\r\n      console.log('✅ Message read receipt:', data);\r\n      setMessages(prev => prev.map(msg => \r\n        msg._id === data.messageId \r\n          ? { ...msg, status: 'read', readAt: data.readAt }\r\n          : msg\r\n      ));\r\n    });\r\n  };\r\n\r\n  // Cleanup socket listeners\r\n  const cleanupSocketListeners = () => {\r\n    socketService.off('connected');\r\n    socketService.off('disconnected');\r\n    socketService.off('connect_error');\r\n    socketService.off('new-message');\r\n    socketService.off('user-typing');\r\n    socketService.off('user-stop-typing');\r\n    socketService.off('message-read');\r\n  };\r\n\r\n  // Handle sending messages\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newMessage.trim() || sending) return;\r\n\r\n    const messageContent = newMessage.trim();\r\n    setNewMessage('');\r\n    setSending(true);\r\n\r\n    try {\r\n      console.log('📤 Sending message via Socket.io...');\r\n      \r\n      // Send via socket for real-time delivery\r\n      if (socketService.isConnected()) {\r\n        await socketService.sendMessage(otherUser._id, messageContent);\r\n        console.log('✅ Message sent via Socket.io');\r\n      } else {\r\n        // Fallback to HTTP API\r\n        console.log('📡 Socket not connected, using HTTP API...');\r\n        const result = await messageService.sendMessage(otherUser._id, messageContent);\r\n        \r\n        if (result.success) {\r\n          setMessages(prev => [...prev, result.data]);\r\n        } else {\r\n          throw new Error(result.error);\r\n        }\r\n      }\r\n\r\n      // Stop typing\r\n      socketService.stopTyping(otherUser._id);\r\n      setIsTyping(false);\r\n\r\n    } catch (error) {\r\n      console.error('❌ Failed to send message:', error);\r\n      // Restore message on error\r\n      setNewMessage(messageContent);\r\n      alert('Failed to send message. Please try again.');\r\n    } finally {\r\n      setSending(false);\r\n    }\r\n  };\r\n\r\n  // Handle typing indicators\r\n  const handleTyping = (e) => {\r\n    setNewMessage(e.target.value);\r\n\r\n    if (!isTyping && e.target.value.trim()) {\r\n      setIsTyping(true);\r\n      socketService.startTyping(otherUser._id);\r\n    }\r\n\r\n    // Clear existing timeout\r\n    if (typingTimeoutRef.current) {\r\n      clearTimeout(typingTimeoutRef.current);\r\n    }\r\n\r\n    // Set new timeout\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      if (isTyping) {\r\n        setIsTyping(false);\r\n        socketService.stopTyping(otherUser._id);\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  // Format message time\r\n  const formatTime = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  // Get connection status display\r\n  const getConnectionStatusDisplay = () => {\r\n    switch (connectionStatus) {\r\n      case 'connected':\r\n        return <span className=\"status-connected\">🟢 Real-time</span>;\r\n      case 'disconnected':\r\n        return <span className=\"status-disconnected\">🔴 Disconnected</span>;\r\n      case 'error':\r\n        return <span className=\"status-error\">❌ Connection Error</span>;\r\n      default:\r\n        return <span className=\"status-connecting\">🟡 Connecting...</span>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"realtime-chat\">\r\n      <div className=\"chat-header\">\r\n        <div className=\"user-info\">\r\n          <img \r\n            src={otherUser.avatar || '/default-avatar.png'} \r\n            alt={otherUser.name}\r\n            className=\"user-avatar\"\r\n          />\r\n          <div>\r\n            <h3>{otherUser.name}</h3>\r\n            <span className=\"user-role\">{otherUser.role}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"chat-status\">\r\n          {getConnectionStatusDisplay()}\r\n        </div>\r\n        <button className=\"close-btn\" onClick={onClose}>✕</button>\r\n      </div>\r\n\r\n      <div className=\"messages-container\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"no-messages\">\r\n            <p>Start your conversation with {otherUser.name}</p>\r\n          </div>\r\n        ) : (\r\n          messages.filter(message => message && (message._id || message.messageId)).map((message) => {\r\n            // Safe way to get sender ID with null checks\r\n            const senderId = message.senderId?._id || message.senderId || message.sender?._id || message.sender;\r\n            const isSentByMe = senderId === user.id || senderId === user._id;\r\n            \r\n            return (\r\n              <div\r\n                key={message._id || message.messageId || Math.random()}\r\n                className={`message ${isSentByMe ? 'sent' : 'received'}`}\r\n              >\r\n                <div className=\"message-content\">\r\n                  <p>{message.content || 'Message content unavailable'}</p>\r\n                  <div className=\"message-meta\">\r\n                    <span className=\"message-time\">{formatTime(message.createdAt || message.timestamp)}</span>\r\n                    {isSentByMe ? (\r\n                      <span className={`message-status ${message.status || 'sent'}`}>\r\n                        {message.status === 'read' ? '✓✓' : '✓'}\r\n                      </span>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })\r\n        )}\r\n        \r\n        {otherUserTyping && (\r\n          <div className=\"typing-indicator\">\r\n            <div className=\"typing-dots\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n            <p>{otherUser.name} is typing...</p>\r\n          </div>\r\n        )}\r\n        \r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <form className=\"message-form\" onSubmit={handleSendMessage}>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={handleTyping}\r\n            placeholder=\"Type your message...\"\r\n            disabled={sending}\r\n            className=\"message-input\"\r\n          />\r\n          <button \r\n            type=\"submit\" \r\n            disabled={!newMessage.trim() || sending}\r\n            className=\"send-btn\"\r\n          >\r\n            {sending ? '⏳' : '📤'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RealTimeChat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}