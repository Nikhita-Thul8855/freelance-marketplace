{"ast":null,"code":"import axios from 'axios';\n\n// Environment-based API URL configuration\nconst getApiUrl = () => {\n  // Use environment variable if available\n  if (process.env.REACT_APP_API_URL) {\n    return process.env.REACT_APP_API_URL;\n  }\n\n  // Fallback based on current environment\n  if (process.env.NODE_ENV === 'production') {\n    // This should be set in your deployment environment\n    return 'https://your-backend-app.onrender.com/api';\n  }\n\n  // Development fallback\n  return 'http://localhost:5000/api';\n};\nconst API_URL = getApiUrl();\nconsole.log('🌐 API URL configured:', API_URL);\n\n// Create axios instance with default config\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 30000,\n  // 30 second timeout for production\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  // Enable credentials for CORS\n  withCredentials: false\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","getApiUrl","process","env","REACT_APP_API_URL","NODE_ENV","API_URL","console","log","api","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href"],"sources":["C:/Users/PC/freelance-marketplace/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Environment-based API URL configuration\r\nconst getApiUrl = () => {\r\n  // Use environment variable if available\r\n  if (process.env.REACT_APP_API_URL) {\r\n    return process.env.REACT_APP_API_URL;\r\n  }\r\n  \r\n  // Fallback based on current environment\r\n  if (process.env.NODE_ENV === 'production') {\r\n    // This should be set in your deployment environment\r\n    return 'https://your-backend-app.onrender.com/api';\r\n  }\r\n  \r\n  // Development fallback\r\n  return 'http://localhost:5000/api';\r\n};\r\n\r\nconst API_URL = getApiUrl();\r\n\r\nconsole.log('🌐 API URL configured:', API_URL);\r\n\r\n// Create axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  timeout: 30000, // 30 second timeout for production\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  // Enable credentials for CORS\r\n  withCredentials: false\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAE;IACjC,OAAOF,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACtC;;EAEA;EACA,IAAIF,OAAO,CAACC,GAAG,CAACE,QAAQ,KAAK,YAAY,EAAE;IACzC;IACA,OAAO,2CAA2C;EACpD;;EAEA;EACA,OAAO,2BAA2B;AACpC,CAAC;AAED,MAAMC,OAAO,GAAGL,SAAS,CAAC,CAAC;AAE3BM,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,OAAO,CAAC;;AAE9C;AACA,MAAMG,GAAG,GAAGT,KAAK,CAACU,MAAM,CAAC;EACvBC,OAAO,EAAEL,OAAO;EAChBM,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACD;EACAC,eAAe,EAAE;AACnB,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAACS,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,GAAG,CAACM,YAAY,CAACW,QAAQ,CAACT,GAAG,CAC1BS,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/BC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}