{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"znaků\",\n      verb: \"mít\"\n    },\n    file: {\n      unit: \"bajtů\",\n      verb: \"mít\"\n    },\n    array: {\n      unit: \"prvků\",\n      verb: \"mít\"\n    },\n    set: {\n      unit: \"prvků\",\n      verb: \"mít\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"číslo\";\n        }\n      case \"string\":\n        {\n          return \"řetězec\";\n        }\n      case \"boolean\":\n        {\n          return \"boolean\";\n        }\n      case \"bigint\":\n        {\n          return \"bigint\";\n        }\n      case \"function\":\n        {\n          return \"funkce\";\n        }\n      case \"symbol\":\n        {\n          return \"symbol\";\n        }\n      case \"undefined\":\n        {\n          return \"undefined\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"pole\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"regulární výraz\",\n    email: \"e-mailová adresa\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"datum a čas ve formátu ISO\",\n    date: \"datum ve formátu ISO\",\n    time: \"čas ve formátu ISO\",\n    duration: \"doba trvání ISO\",\n    ipv4: \"IPv4 adresa\",\n    ipv6: \"IPv6 adresa\",\n    cidrv4: \"rozsah IPv4\",\n    cidrv6: \"rozsah IPv6\",\n    base64: \"řetězec zakódovaný ve formátu base64\",\n    base64url: \"řetězec zakódovaný ve formátu base64url\",\n    json_string: \"řetězec ve formátu JSON\",\n    e164: \"číslo E.164\",\n    jwt: \"JWT\",\n    template_literal: \"vstup\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"Neplatn\\xFD vstup: o\\u010Dek\\xE1v\\xE1no \".concat(issue.expected, \", obdr\\u017Eeno \").concat(parsedType(issue.input));\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"Neplatn\\xFD vstup: o\\u010Dek\\xE1v\\xE1no \".concat(util.stringifyPrimitive(issue.values[0]));\n        return \"Neplatn\\xE1 mo\\u017Enost: o\\u010Dek\\xE1v\\xE1na jedna z hodnot \".concat(util.joinValues(issue.values, \"|\"));\n      case \"too_big\":\n        {\n          var _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            var _issue$origin, _sizing$unit;\n            return \"Hodnota je p\\u0159\\xEDli\\u0161 velk\\xE1: \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"hodnota\", \" mus\\xED m\\xEDt \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"prvků\");\n          }\n          return \"Hodnota je p\\u0159\\xEDli\\u0161 velk\\xE1: \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"hodnota\", \" mus\\xED b\\xFDt \").concat(adj).concat(issue.maximum.toString());\n        }\n      case \"too_small\":\n        {\n          var _issue$origin4;\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            var _issue$origin3, _sizing$unit2;\n            return \"Hodnota je p\\u0159\\xEDli\\u0161 mal\\xE1: \".concat((_issue$origin3 = issue.origin) !== null && _issue$origin3 !== void 0 ? _issue$origin3 : \"hodnota\", \" mus\\xED m\\xEDt \").concat(adj).concat(issue.minimum.toString(), \" \").concat((_sizing$unit2 = sizing.unit) !== null && _sizing$unit2 !== void 0 ? _sizing$unit2 : \"prvků\");\n          }\n          return \"Hodnota je p\\u0159\\xEDli\\u0161 mal\\xE1: \".concat((_issue$origin4 = issue.origin) !== null && _issue$origin4 !== void 0 ? _issue$origin4 : \"hodnota\", \" mus\\xED b\\xFDt \").concat(adj).concat(issue.minimum.toString());\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return \"Neplatn\\xFD \\u0159et\\u011Bzec: mus\\xED za\\u010D\\xEDnat na \\\"\".concat(_issue.prefix, \"\\\"\");\n          if (_issue.format === \"ends_with\") return \"Neplatn\\xFD \\u0159et\\u011Bzec: mus\\xED kon\\u010Dit na \\\"\".concat(_issue.suffix, \"\\\"\");\n          if (_issue.format === \"includes\") return \"Neplatn\\xFD \\u0159et\\u011Bzec: mus\\xED obsahovat \\\"\".concat(_issue.includes, \"\\\"\");\n          if (_issue.format === \"regex\") return \"Neplatn\\xFD \\u0159et\\u011Bzec: mus\\xED odpov\\xEDdat vzoru \".concat(_issue.pattern);\n          return \"Neplatn\\xFD form\\xE1t \".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format);\n        }\n      case \"not_multiple_of\":\n        return \"Neplatn\\xE9 \\u010D\\xEDslo: mus\\xED b\\xFDt n\\xE1sobkem \".concat(issue.divisor);\n      case \"unrecognized_keys\":\n        return \"Nezn\\xE1m\\xE9 kl\\xED\\u010De: \".concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"Neplatn\\xFD kl\\xED\\u010D v \".concat(issue.origin);\n      case \"invalid_union\":\n        return \"Neplatný vstup\";\n      case \"invalid_element\":\n        return \"Neplatn\\xE1 hodnota v \".concat(issue.origin);\n      default:\n        return \"Neplatn\\xFD vstup\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}