{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"tekens\"\n    },\n    file: {\n      unit: \"bytes\"\n    },\n    array: {\n      unit: \"elementen\"\n    },\n    set: {\n      unit: \"elementen\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"getal\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"array\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"invoer\",\n    email: \"emailadres\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ISO datum en tijd\",\n    date: \"ISO datum\",\n    time: \"ISO tijd\",\n    duration: \"ISO duur\",\n    ipv4: \"IPv4-adres\",\n    ipv6: \"IPv6-adres\",\n    cidrv4: \"IPv4-bereik\",\n    cidrv6: \"IPv6-bereik\",\n    base64: \"base64-gecodeerde tekst\",\n    base64url: \"base64 URL-gecodeerde tekst\",\n    json_string: \"JSON string\",\n    e164: \"E.164-nummer\",\n    jwt: \"JWT\",\n    template_literal: \"invoer\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `Ongeldige invoer: verwacht ${issue.expected}, ontving ${parsedType(issue.input)}`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return `Ongeldige invoer: verwacht ${util.stringifyPrimitive(issue.values[0])}`;\n        return `Ongeldige optie: verwacht één van ${util.joinValues(issue.values, \"|\")}`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"elementen\"} bevat`;\n          return `Te lang: verwacht dat ${issue.origin ?? \"waarde\"} ${adj}${issue.maximum.toString()} is`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit} bevat`;\n          }\n          return `Te kort: verwacht dat ${issue.origin} ${adj}${issue.minimum.toString()} is`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return `Ongeldige tekst: moet met \"${_issue.prefix}\" beginnen`;\n          }\n          if (_issue.format === \"ends_with\") return `Ongeldige tekst: moet op \"${_issue.suffix}\" eindigen`;\n          if (_issue.format === \"includes\") return `Ongeldige tekst: moet \"${_issue.includes}\" bevatten`;\n          if (_issue.format === \"regex\") return `Ongeldige tekst: moet overeenkomen met patroon ${_issue.pattern}`;\n          return `Ongeldig: ${Nouns[_issue.format] ?? issue.format}`;\n        }\n      case \"not_multiple_of\":\n        return `Ongeldig getal: moet een veelvoud van ${issue.divisor} zijn`;\n      case \"unrecognized_keys\":\n        return `Onbekende key${issue.keys.length > 1 ? \"s\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n      case \"invalid_key\":\n        return `Ongeldige key in ${issue.origin}`;\n      case \"invalid_union\":\n        return \"Ongeldige invoer\";\n      case \"invalid_element\":\n        return `Ongeldige waarde in ${issue.origin}`;\n      default:\n        return `Ongeldige invoer`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}