{"ast":null,"code":"import api from './api';\nclass AuthService {\n  // Update user profile\n  async updateProfile(profileData) {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      return {\n        success: true,\n        user: response.data.user,\n        message: response.data.message\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to update profile'\n      };\n    }\n  }\n\n  // Get current user profile\n  async getProfile() {\n    try {\n      const response = await api.get('/auth/me');\n      return {\n        success: true,\n        user: response.data.user\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch profile'\n      };\n    }\n  }\n\n  // Login user\n  async login(credentials) {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      return {\n        success: true,\n        token: response.data.token,\n        user: response.data.user\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Login failed'\n      };\n    }\n  }\n\n  // Register user\n  async register(userData) {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return {\n        success: true,\n        token: response.data.token,\n        user: response.data.user\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Registration failed'\n      };\n    }\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["api","AuthService","updateProfile","profileData","response","put","success","user","data","message","error","_error$response","_error$response$data","getProfile","get","_error$response2","_error$response2$data","login","credentials","post","token","_error$response3","_error$response3$data","register","userData","_error$response4","_error$response4$data"],"sources":["C:/Users/PC/freelance-marketplace/client/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nclass AuthService {\r\n  // Update user profile\r\n  async updateProfile(profileData) {\r\n    try {\r\n      const response = await api.put('/auth/profile', profileData);\r\n      return {\r\n        success: true,\r\n        user: response.data.user,\r\n        message: response.data.message\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to update profile'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Get current user profile\r\n  async getProfile() {\r\n    try {\r\n      const response = await api.get('/auth/me');\r\n      return {\r\n        success: true,\r\n        user: response.data.user\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Failed to fetch profile'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Login user\r\n  async login(credentials) {\r\n    try {\r\n      const response = await api.post('/auth/login', credentials);\r\n      return {\r\n        success: true,\r\n        token: response.data.token,\r\n        user: response.data.user\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Login failed'\r\n      };\r\n    }\r\n  }\r\n\r\n  // Register user\r\n  async register(userData) {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      return {\r\n        success: true,\r\n        token: response.data.token,\r\n        user: response.data.user\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Registration failed'\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}