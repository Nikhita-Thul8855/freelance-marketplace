{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"តួអក្សរ\",\n      verb: \"គួរមាន\"\n    },\n    file: {\n      unit: \"បៃ\",\n      verb: \"គួរមាន\"\n    },\n    array: {\n      unit: \"ធាតុ\",\n      verb: \"គួរមាន\"\n    },\n    set: {\n      unit: \"ធាតុ\",\n      verb: \"គួរមាន\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"មិនមែនជាលេខ (NaN)\" : \"លេខ\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"អារេ (Array)\";\n          }\n          if (data === null) {\n            return \"គ្មានតម្លៃ (null)\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"ទិន្នន័យបញ្ចូល\",\n    email: \"អាសយដ្ឋានអ៊ីមែល\",\n    url: \"URL\",\n    emoji: \"សញ្ញាអារម្មណ៍\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"កាលបរិច្ឆេទ និងម៉ោង ISO\",\n    date: \"កាលបរិច្ឆេទ ISO\",\n    time: \"ម៉ោង ISO\",\n    duration: \"រយៈពេល ISO\",\n    ipv4: \"អាសយដ្ឋាន IPv4\",\n    ipv6: \"អាសយដ្ឋាន IPv6\",\n    cidrv4: \"ដែនអាសយដ្ឋាន IPv4\",\n    cidrv6: \"ដែនអាសយដ្ឋាន IPv6\",\n    base64: \"ខ្សែអក្សរអ៊ិកូដ base64\",\n    base64url: \"ខ្សែអក្សរអ៊ិកូដ base64url\",\n    json_string: \"ខ្សែអក្សរ JSON\",\n    e164: \"លេខ E.164\",\n    jwt: \"JWT\",\n    template_literal: \"ទិន្នន័យបញ្ចូល\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${issue.expected} ប៉ុន្តែទទួលបាន ${parsedType(issue.input)}`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return `ទិន្នន័យបញ្ចូលមិនត្រឹមត្រូវ៖ ត្រូវការ ${util.stringifyPrimitive(issue.values[0])}`;\n        return `ជម្រើសមិនត្រឹមត្រូវ៖ ត្រូវជាមួយក្នុងចំណោម ${util.joinValues(issue.values, \"|\")}`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `ធំពេក៖ ត្រូវការ ${issue.origin ?? \"តម្លៃ\"} ${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"ធាតុ\"}`;\n          return `ធំពេក៖ ត្រូវការ ${issue.origin ?? \"តម្លៃ\"} ${adj} ${issue.maximum.toString()}`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `តូចពេក៖ ត្រូវការ ${issue.origin} ${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n          }\n          return `តូចពេក៖ ត្រូវការ ${issue.origin} ${adj} ${issue.minimum.toString()}`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវចាប់ផ្តើមដោយ \"${_issue.prefix}\"`;\n          }\n          if (_issue.format === \"ends_with\") return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវបញ្ចប់ដោយ \"${_issue.suffix}\"`;\n          if (_issue.format === \"includes\") return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវមាន \"${_issue.includes}\"`;\n          if (_issue.format === \"regex\") return `ខ្សែអក្សរមិនត្រឹមត្រូវ៖ ត្រូវតែផ្គូផ្គងនឹងទម្រង់ដែលបានកំណត់ ${_issue.pattern}`;\n          return `មិនត្រឹមត្រូវ៖ ${Nouns[_issue.format] ?? issue.format}`;\n        }\n      case \"not_multiple_of\":\n        return `លេខមិនត្រឹមត្រូវ៖ ត្រូវតែជាពហុគុណនៃ ${issue.divisor}`;\n      case \"unrecognized_keys\":\n        return `រកឃើញសោមិនស្គាល់៖ ${util.joinValues(issue.keys, \", \")}`;\n      case \"invalid_key\":\n        return `សោមិនត្រឹមត្រូវនៅក្នុង ${issue.origin}`;\n      case \"invalid_union\":\n        return `ទិន្នន័យមិនត្រឹមត្រូវ`;\n      case \"invalid_element\":\n        return `ទិន្នន័យមិនត្រឹមត្រូវនៅក្នុង ${issue.origin}`;\n      default:\n        return `ទិន្នន័យមិនត្រឹមត្រូវ`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}