{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"znaków\",\n      verb: \"mieć\"\n    },\n    file: {\n      unit: \"bajtów\",\n      verb: \"mieć\"\n    },\n    array: {\n      unit: \"elementów\",\n      verb: \"mieć\"\n    },\n    set: {\n      unit: \"elementów\",\n      verb: \"mieć\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"liczba\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"tablica\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"wyrażenie\",\n    email: \"adres email\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"data i godzina w formacie ISO\",\n    date: \"data w formacie ISO\",\n    time: \"godzina w formacie ISO\",\n    duration: \"czas trwania ISO\",\n    ipv4: \"adres IPv4\",\n    ipv6: \"adres IPv6\",\n    cidrv4: \"zakres IPv4\",\n    cidrv6: \"zakres IPv6\",\n    base64: \"ciąg znaków zakodowany w formacie base64\",\n    base64url: \"ciąg znaków zakodowany w formacie base64url\",\n    json_string: \"ciąg znaków w formacie JSON\",\n    e164: \"liczba E.164\",\n    jwt: \"JWT\",\n    template_literal: \"wejście\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"Nieprawid\\u0142owe dane wej\\u015Bciowe: oczekiwano \".concat(issue.expected, \", otrzymano \").concat(parsedType(issue.input));\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"Nieprawid\\u0142owe dane wej\\u015Bciowe: oczekiwano \".concat(util.stringifyPrimitive(issue.values[0]));\n        return \"Nieprawid\\u0142owa opcja: oczekiwano jednej z warto\\u015Bci \".concat(util.joinValues(issue.values, \"|\"));\n      case \"too_big\":\n        {\n          var _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            var _issue$origin, _sizing$unit;\n            return \"Za du\\u017Ca warto\\u015B\\u0107: oczekiwano, \\u017Ce \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"wartość\", \" b\\u0119dzie mie\\u0107 \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"elementów\");\n          }\n          return \"Zbyt du\\u017C(y/a/e): oczekiwano, \\u017Ce \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"wartość\", \" b\\u0119dzie wynosi\\u0107 \").concat(adj).concat(issue.maximum.toString());\n        }\n      case \"too_small\":\n        {\n          var _issue$origin4;\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            var _issue$origin3, _sizing$unit2;\n            return \"Za ma\\u0142a warto\\u015B\\u0107: oczekiwano, \\u017Ce \".concat((_issue$origin3 = issue.origin) !== null && _issue$origin3 !== void 0 ? _issue$origin3 : \"wartość\", \" b\\u0119dzie mie\\u0107 \").concat(adj).concat(issue.minimum.toString(), \" \").concat((_sizing$unit2 = sizing.unit) !== null && _sizing$unit2 !== void 0 ? _sizing$unit2 : \"elementów\");\n          }\n          return \"Zbyt ma\\u0142(y/a/e): oczekiwano, \\u017Ce \".concat((_issue$origin4 = issue.origin) !== null && _issue$origin4 !== void 0 ? _issue$origin4 : \"wartość\", \" b\\u0119dzie wynosi\\u0107 \").concat(adj).concat(issue.minimum.toString());\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return \"Nieprawid\\u0142owy ci\\u0105g znak\\xF3w: musi zaczyna\\u0107 si\\u0119 od \\\"\".concat(_issue.prefix, \"\\\"\");\n          if (_issue.format === \"ends_with\") return \"Nieprawid\\u0142owy ci\\u0105g znak\\xF3w: musi ko\\u0144czy\\u0107 si\\u0119 na \\\"\".concat(_issue.suffix, \"\\\"\");\n          if (_issue.format === \"includes\") return \"Nieprawid\\u0142owy ci\\u0105g znak\\xF3w: musi zawiera\\u0107 \\\"\".concat(_issue.includes, \"\\\"\");\n          if (_issue.format === \"regex\") return \"Nieprawid\\u0142owy ci\\u0105g znak\\xF3w: musi odpowiada\\u0107 wzorcowi \".concat(_issue.pattern);\n          return \"Nieprawid\\u0142ow(y/a/e) \".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format);\n        }\n      case \"not_multiple_of\":\n        return \"Nieprawid\\u0142owa liczba: musi by\\u0107 wielokrotno\\u015Bci\\u0105 \".concat(issue.divisor);\n      case \"unrecognized_keys\":\n        return \"Nierozpoznane klucze\".concat(issue.keys.length > 1 ? \"s\" : \"\", \": \").concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"Nieprawid\\u0142owy klucz w \".concat(issue.origin);\n      case \"invalid_union\":\n        return \"Nieprawidłowe dane wejściowe\";\n      case \"invalid_element\":\n        return \"Nieprawid\\u0142owa warto\\u015B\\u0107 w \".concat(issue.origin);\n      default:\n        return \"Nieprawid\\u0142owe dane wej\\u015Bciowe\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}