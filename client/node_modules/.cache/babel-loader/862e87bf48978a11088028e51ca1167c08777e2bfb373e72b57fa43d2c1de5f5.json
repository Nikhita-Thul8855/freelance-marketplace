{"ast":null,"code":"import * as util from \"../core/util.js\";\nexport const parsedType = data => {\n  const t = typeof data;\n  switch (t) {\n    case \"number\":\n      {\n        return Number.isNaN(data) ? \"NaN\" : \"number\";\n      }\n    case \"object\":\n      {\n        if (Array.isArray(data)) {\n          return \"array\";\n        }\n        if (data === null) {\n          return \"null\";\n        }\n        if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n          return data.constructor.name;\n        }\n      }\n  }\n  return t;\n};\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"karakter\",\n      verb: \"olmalı\"\n    },\n    file: {\n      unit: \"bayt\",\n      verb: \"olmalı\"\n    },\n    array: {\n      unit: \"öğe\",\n      verb: \"olmalı\"\n    },\n    set: {\n      unit: \"öğe\",\n      verb: \"olmalı\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const Nouns = {\n    regex: \"girdi\",\n    email: \"e-posta adresi\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ISO tarih ve saat\",\n    date: \"ISO tarih\",\n    time: \"ISO saat\",\n    duration: \"ISO süre\",\n    ipv4: \"IPv4 adresi\",\n    ipv6: \"IPv6 adresi\",\n    cidrv4: \"IPv4 aralığı\",\n    cidrv6: \"IPv6 aralığı\",\n    base64: \"base64 ile şifrelenmiş metin\",\n    base64url: \"base64url ile şifrelenmiş metin\",\n    json_string: \"JSON dizesi\",\n    e164: \"E.164 sayısı\",\n    jwt: \"JWT\",\n    template_literal: \"Şablon dizesi\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `Geçersiz değer: beklenen ${issue.expected}, alınan ${parsedType(issue.input)}`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return `Geçersiz değer: beklenen ${util.stringifyPrimitive(issue.values[0])}`;\n        return `Geçersiz seçenek: aşağıdakilerden biri olmalı: ${util.joinValues(issue.values, \"|\")}`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()} ${sizing.unit ?? \"öğe\"}`;\n          return `Çok büyük: beklenen ${issue.origin ?? \"değer\"} ${adj}${issue.maximum.toString()}`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()} ${sizing.unit}`;\n          return `Çok küçük: beklenen ${issue.origin} ${adj}${issue.minimum.toString()}`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return `Geçersiz metin: \"${_issue.prefix}\" ile başlamalı`;\n          if (_issue.format === \"ends_with\") return `Geçersiz metin: \"${_issue.suffix}\" ile bitmeli`;\n          if (_issue.format === \"includes\") return `Geçersiz metin: \"${_issue.includes}\" içermeli`;\n          if (_issue.format === \"regex\") return `Geçersiz metin: ${_issue.pattern} desenine uymalı`;\n          return `Geçersiz ${Nouns[_issue.format] ?? issue.format}`;\n        }\n      case \"not_multiple_of\":\n        return `Geçersiz sayı: ${issue.divisor} ile tam bölünebilmeli`;\n      case \"unrecognized_keys\":\n        return `Tanınmayan anahtar${issue.keys.length > 1 ? \"lar\" : \"\"}: ${util.joinValues(issue.keys, \", \")}`;\n      case \"invalid_key\":\n        return `${issue.origin} içinde geçersiz anahtar`;\n      case \"invalid_union\":\n        return \"Geçersiz değer\";\n      case \"invalid_element\":\n        return `${issue.origin} içinde geçersiz değer`;\n      default:\n        return `Geçersiz değer`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}