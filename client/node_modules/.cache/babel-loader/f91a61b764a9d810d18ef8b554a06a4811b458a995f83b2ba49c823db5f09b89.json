{"ast":null,"code":"import _objectSpread from \"C:/Users/PC/freelance-marketplace/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nexport const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n  constructor() {\n    this._map = new Map();\n    this._idmap = new Map();\n  }\n  add(schema) {\n    const meta = arguments.length <= 1 ? undefined : arguments[1];\n    this._map.set(schema, meta);\n    if (meta && typeof meta === \"object\" && \"id\" in meta) {\n      if (this._idmap.has(meta.id)) {\n        throw new Error(\"ID \".concat(meta.id, \" already exists in the registry\"));\n      }\n      this._idmap.set(meta.id, schema);\n    }\n    return this;\n  }\n  clear() {\n    this._map = new Map();\n    this._idmap = new Map();\n    return this;\n  }\n  remove(schema) {\n    const meta = this._map.get(schema);\n    if (meta && typeof meta === \"object\" && \"id\" in meta) {\n      this._idmap.delete(meta.id);\n    }\n    this._map.delete(schema);\n    return this;\n  }\n  get(schema) {\n    // return this._map.get(schema) as any;\n    // inherit metadata\n    const p = schema._zod.parent;\n    if (p) {\n      var _this$get;\n      const pm = _objectSpread({}, (_this$get = this.get(p)) !== null && _this$get !== void 0 ? _this$get : {});\n      delete pm.id; // do not inherit id\n      return _objectSpread(_objectSpread({}, pm), this._map.get(schema));\n    }\n    return this._map.get(schema);\n  }\n  has(schema) {\n    return this._map.has(schema);\n  }\n}\n// registries\nexport function registry() {\n  return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/registry();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}