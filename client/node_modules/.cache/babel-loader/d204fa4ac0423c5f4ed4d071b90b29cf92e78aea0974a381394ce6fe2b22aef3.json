{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"ตัวอักษร\",\n      verb: \"ควรมี\"\n    },\n    file: {\n      unit: \"ไบต์\",\n      verb: \"ควรมี\"\n    },\n    array: {\n      unit: \"รายการ\",\n      verb: \"ควรมี\"\n    },\n    set: {\n      unit: \"รายการ\",\n      verb: \"ควรมี\"\n    }\n  };\n  function getSizing(origin) {\n    return Sizable[origin] ?? null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"ไม่ใช่ตัวเลข (NaN)\" : \"ตัวเลข\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"อาร์เรย์ (Array)\";\n          }\n          if (data === null) {\n            return \"ไม่มีค่า (null)\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"ข้อมูลที่ป้อน\",\n    email: \"ที่อยู่อีเมล\",\n    url: \"URL\",\n    emoji: \"อิโมจิ\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"วันที่เวลาแบบ ISO\",\n    date: \"วันที่แบบ ISO\",\n    time: \"เวลาแบบ ISO\",\n    duration: \"ช่วงเวลาแบบ ISO\",\n    ipv4: \"ที่อยู่ IPv4\",\n    ipv6: \"ที่อยู่ IPv6\",\n    cidrv4: \"ช่วง IP แบบ IPv4\",\n    cidrv6: \"ช่วง IP แบบ IPv6\",\n    base64: \"ข้อความแบบ Base64\",\n    base64url: \"ข้อความแบบ Base64 สำหรับ URL\",\n    json_string: \"ข้อความแบบ JSON\",\n    e164: \"เบอร์โทรศัพท์ระหว่างประเทศ (E.164)\",\n    jwt: \"โทเคน JWT\",\n    template_literal: \"ข้อมูลที่ป้อน\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return `ประเภทข้อมูลไม่ถูกต้อง: ควรเป็น ${issue.expected} แต่ได้รับ ${parsedType(issue.input)}`;\n      case \"invalid_value\":\n        if (issue.values.length === 1) return `ค่าไม่ถูกต้อง: ควรเป็น ${util.stringifyPrimitive(issue.values[0])}`;\n        return `ตัวเลือกไม่ถูกต้อง: ควรเป็นหนึ่งใน ${util.joinValues(issue.values, \"|\")}`;\n      case \"too_big\":\n        {\n          const adj = issue.inclusive ? \"ไม่เกิน\" : \"น้อยกว่า\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return `เกินกำหนด: ${issue.origin ?? \"ค่า\"} ควรมี${adj} ${issue.maximum.toString()} ${sizing.unit ?? \"รายการ\"}`;\n          return `เกินกำหนด: ${issue.origin ?? \"ค่า\"} ควรมี${adj} ${issue.maximum.toString()}`;\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \"อย่างน้อย\" : \"มากกว่า\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return `น้อยกว่ากำหนด: ${issue.origin} ควรมี${adj} ${issue.minimum.toString()} ${sizing.unit}`;\n          }\n          return `น้อยกว่ากำหนด: ${issue.origin} ควรมี${adj} ${issue.minimum.toString()}`;\n        }\n      case \"invalid_format\":\n        {\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return `รูปแบบไม่ถูกต้อง: ข้อความต้องขึ้นต้นด้วย \"${_issue.prefix}\"`;\n          }\n          if (_issue.format === \"ends_with\") return `รูปแบบไม่ถูกต้อง: ข้อความต้องลงท้ายด้วย \"${_issue.suffix}\"`;\n          if (_issue.format === \"includes\") return `รูปแบบไม่ถูกต้อง: ข้อความต้องมี \"${_issue.includes}\" อยู่ในข้อความ`;\n          if (_issue.format === \"regex\") return `รูปแบบไม่ถูกต้อง: ต้องตรงกับรูปแบบที่กำหนด ${_issue.pattern}`;\n          return `รูปแบบไม่ถูกต้อง: ${Nouns[_issue.format] ?? issue.format}`;\n        }\n      case \"not_multiple_of\":\n        return `ตัวเลขไม่ถูกต้อง: ต้องเป็นจำนวนที่หารด้วย ${issue.divisor} ได้ลงตัว`;\n      case \"unrecognized_keys\":\n        return `พบคีย์ที่ไม่รู้จัก: ${util.joinValues(issue.keys, \", \")}`;\n      case \"invalid_key\":\n        return `คีย์ไม่ถูกต้องใน ${issue.origin}`;\n      case \"invalid_union\":\n        return \"ข้อมูลไม่ถูกต้อง: ไม่ตรงกับรูปแบบยูเนียนที่กำหนดไว้\";\n      case \"invalid_element\":\n        return `ข้อมูลไม่ถูกต้องใน ${issue.origin}`;\n      default:\n        return `ข้อมูลไม่ถูกต้อง`;\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}