{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"حروف\",\n      verb: \"ہونا\"\n    },\n    file: {\n      unit: \"بائٹس\",\n      verb: \"ہونا\"\n    },\n    array: {\n      unit: \"آئٹمز\",\n      verb: \"ہونا\"\n    },\n    set: {\n      unit: \"آئٹمز\",\n      verb: \"ہونا\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"نمبر\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"آرے\";\n          }\n          if (data === null) {\n            return \"نل\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"ان پٹ\",\n    email: \"ای میل ایڈریس\",\n    url: \"یو آر ایل\",\n    emoji: \"ایموجی\",\n    uuid: \"یو یو آئی ڈی\",\n    uuidv4: \"یو یو آئی ڈی وی 4\",\n    uuidv6: \"یو یو آئی ڈی وی 6\",\n    nanoid: \"نینو آئی ڈی\",\n    guid: \"جی یو آئی ڈی\",\n    cuid: \"سی یو آئی ڈی\",\n    cuid2: \"سی یو آئی ڈی 2\",\n    ulid: \"یو ایل آئی ڈی\",\n    xid: \"ایکس آئی ڈی\",\n    ksuid: \"کے ایس یو آئی ڈی\",\n    datetime: \"آئی ایس او ڈیٹ ٹائم\",\n    date: \"آئی ایس او تاریخ\",\n    time: \"آئی ایس او وقت\",\n    duration: \"آئی ایس او مدت\",\n    ipv4: \"آئی پی وی 4 ایڈریس\",\n    ipv6: \"آئی پی وی 6 ایڈریس\",\n    cidrv4: \"آئی پی وی 4 رینج\",\n    cidrv6: \"آئی پی وی 6 رینج\",\n    base64: \"بیس 64 ان کوڈڈ سٹرنگ\",\n    base64url: \"بیس 64 یو آر ایل ان کوڈڈ سٹرنگ\",\n    json_string: \"جے ایس او این سٹرنگ\",\n    e164: \"ای 164 نمبر\",\n    jwt: \"جے ڈبلیو ٹی\",\n    template_literal: \"ان پٹ\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"\\u063A\\u0644\\u0637 \\u0627\\u0646 \\u067E\\u0679: \".concat(issue.expected, \" \\u0645\\u062A\\u0648\\u0642\\u0639 \\u062A\\u06BE\\u0627\\u060C \").concat(parsedType(issue.input), \" \\u0645\\u0648\\u0635\\u0648\\u0644 \\u06C1\\u0648\\u0627\");\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"\\u063A\\u0644\\u0637 \\u0627\\u0646 \\u067E\\u0679: \".concat(util.stringifyPrimitive(issue.values[0]), \" \\u0645\\u062A\\u0648\\u0642\\u0639 \\u062A\\u06BE\\u0627\");\n        return \"\\u063A\\u0644\\u0637 \\u0622\\u067E\\u0634\\u0646: \".concat(util.joinValues(issue.values, \"|\"), \" \\u0645\\u06CC\\u06BA \\u0633\\u06D2 \\u0627\\u06CC\\u06A9 \\u0645\\u062A\\u0648\\u0642\\u0639 \\u062A\\u06BE\\u0627\");\n      case \"too_big\":\n        {\n          var _issue$origin, _sizing$unit, _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return \"\\u0628\\u06C1\\u062A \\u0628\\u0691\\u0627: \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"ویلیو\", \" \\u06A9\\u06D2 \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"عناصر\", \" \\u06C1\\u0648\\u0646\\u06D2 \\u0645\\u062A\\u0648\\u0642\\u0639 \\u062A\\u06BE\\u06D2\");\n          return \"\\u0628\\u06C1\\u062A \\u0628\\u0691\\u0627: \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"ویلیو\", \" \\u06A9\\u0627 \").concat(adj).concat(issue.maximum.toString(), \" \\u06C1\\u0648\\u0646\\u0627 \\u0645\\u062A\\u0648\\u0642\\u0639 \\u062A\\u06BE\\u0627\");\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"\\u0628\\u06C1\\u062A \\u0686\\u06BE\\u0648\\u0679\\u0627: \".concat(issue.origin, \" \\u06A9\\u06D2 \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit, \" \\u06C1\\u0648\\u0646\\u06D2 \\u0645\\u062A\\u0648\\u0642\\u0639 \\u062A\\u06BE\\u06D2\");\n          }\n          return \"\\u0628\\u06C1\\u062A \\u0686\\u06BE\\u0648\\u0679\\u0627: \".concat(issue.origin, \" \\u06A9\\u0627 \").concat(adj).concat(issue.minimum.toString(), \" \\u06C1\\u0648\\u0646\\u0627 \\u0645\\u062A\\u0648\\u0642\\u0639 \\u062A\\u06BE\\u0627\");\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return \"\\u063A\\u0644\\u0637 \\u0633\\u0679\\u0631\\u0646\\u06AF: \\\"\".concat(_issue.prefix, \"\\\" \\u0633\\u06D2 \\u0634\\u0631\\u0648\\u0639 \\u06C1\\u0648\\u0646\\u0627 \\u0686\\u0627\\u06C1\\u06CC\\u06D2\");\n          }\n          if (_issue.format === \"ends_with\") return \"\\u063A\\u0644\\u0637 \\u0633\\u0679\\u0631\\u0646\\u06AF: \\\"\".concat(_issue.suffix, \"\\\" \\u067E\\u0631 \\u062E\\u062A\\u0645 \\u06C1\\u0648\\u0646\\u0627 \\u0686\\u0627\\u06C1\\u06CC\\u06D2\");\n          if (_issue.format === \"includes\") return \"\\u063A\\u0644\\u0637 \\u0633\\u0679\\u0631\\u0646\\u06AF: \\\"\".concat(_issue.includes, \"\\\" \\u0634\\u0627\\u0645\\u0644 \\u06C1\\u0648\\u0646\\u0627 \\u0686\\u0627\\u06C1\\u06CC\\u06D2\");\n          if (_issue.format === \"regex\") return \"\\u063A\\u0644\\u0637 \\u0633\\u0679\\u0631\\u0646\\u06AF: \\u067E\\u06CC\\u0679\\u0631\\u0646 \".concat(_issue.pattern, \" \\u0633\\u06D2 \\u0645\\u06CC\\u0686 \\u06C1\\u0648\\u0646\\u0627 \\u0686\\u0627\\u06C1\\u06CC\\u06D2\");\n          return \"\\u063A\\u0644\\u0637 \".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format);\n        }\n      case \"not_multiple_of\":\n        return \"\\u063A\\u0644\\u0637 \\u0646\\u0645\\u0628\\u0631: \".concat(issue.divisor, \" \\u06A9\\u0627 \\u0645\\u0636\\u0627\\u0639\\u0641 \\u06C1\\u0648\\u0646\\u0627 \\u0686\\u0627\\u06C1\\u06CC\\u06D2\");\n      case \"unrecognized_keys\":\n        return \"\\u063A\\u06CC\\u0631 \\u062A\\u0633\\u0644\\u06CC\\u0645 \\u0634\\u062F\\u06C1 \\u06A9\\u06CC\".concat(issue.keys.length > 1 ? \"ز\" : \"\", \": \").concat(util.joinValues(issue.keys, \"، \"));\n      case \"invalid_key\":\n        return \"\".concat(issue.origin, \" \\u0645\\u06CC\\u06BA \\u063A\\u0644\\u0637 \\u06A9\\u06CC\");\n      case \"invalid_union\":\n        return \"غلط ان پٹ\";\n      case \"invalid_element\":\n        return \"\".concat(issue.origin, \" \\u0645\\u06CC\\u06BA \\u063A\\u0644\\u0637 \\u0648\\u06CC\\u0644\\u06CC\\u0648\");\n      default:\n        return \"\\u063A\\u0644\\u0637 \\u0627\\u0646 \\u067E\\u0679\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}