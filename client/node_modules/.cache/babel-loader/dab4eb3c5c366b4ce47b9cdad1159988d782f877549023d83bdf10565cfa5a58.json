{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"کاراکتر\",\n      verb: \"داشته باشد\"\n    },\n    file: {\n      unit: \"بایت\",\n      verb: \"داشته باشد\"\n    },\n    array: {\n      unit: \"آیتم\",\n      verb: \"داشته باشد\"\n    },\n    set: {\n      unit: \"آیتم\",\n      verb: \"داشته باشد\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"عدد\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"آرایه\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"ورودی\",\n    email: \"آدرس ایمیل\",\n    url: \"URL\",\n    emoji: \"ایموجی\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"تاریخ و زمان ایزو\",\n    date: \"تاریخ ایزو\",\n    time: \"زمان ایزو\",\n    duration: \"مدت زمان ایزو\",\n    ipv4: \"IPv4 آدرس\",\n    ipv6: \"IPv6 آدرس\",\n    cidrv4: \"IPv4 دامنه\",\n    cidrv6: \"IPv6 دامنه\",\n    base64: \"base64-encoded رشته\",\n    base64url: \"base64url-encoded رشته\",\n    json_string: \"JSON رشته\",\n    e164: \"E.164 عدد\",\n    jwt: \"JWT\",\n    template_literal: \"ورودی\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"\\u0648\\u0631\\u0648\\u062F\\u06CC \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0645\\u06CC\\u200C\\u0628\\u0627\\u06CC\\u0633\\u062A \".concat(issue.expected, \" \\u0645\\u06CC\\u200C\\u0628\\u0648\\u062F\\u060C \").concat(parsedType(issue.input), \" \\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0634\\u062F\");\n      case \"invalid_value\":\n        if (issue.values.length === 1) {\n          return \"\\u0648\\u0631\\u0648\\u062F\\u06CC \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0645\\u06CC\\u200C\\u0628\\u0627\\u06CC\\u0633\\u062A \".concat(util.stringifyPrimitive(issue.values[0]), \" \\u0645\\u06CC\\u200C\\u0628\\u0648\\u062F\");\n        }\n        return \"\\u06AF\\u0632\\u06CC\\u0646\\u0647 \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0645\\u06CC\\u200C\\u0628\\u0627\\u06CC\\u0633\\u062A \\u06CC\\u06A9\\u06CC \\u0627\\u0632 \".concat(util.joinValues(issue.values, \"|\"), \" \\u0645\\u06CC\\u200C\\u0628\\u0648\\u062F\");\n      case \"too_big\":\n        {\n          var _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            var _issue$origin, _sizing$unit;\n            return \"\\u062E\\u06CC\\u0644\\u06CC \\u0628\\u0632\\u0631\\u06AF: \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"مقدار\", \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"عنصر\", \" \\u0628\\u0627\\u0634\\u062F\");\n          }\n          return \"\\u062E\\u06CC\\u0644\\u06CC \\u0628\\u0632\\u0631\\u06AF: \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"مقدار\", \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.maximum.toString(), \" \\u0628\\u0627\\u0634\\u062F\");\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"\\u062E\\u06CC\\u0644\\u06CC \\u06A9\\u0648\\u0686\\u06A9: \".concat(issue.origin, \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit, \" \\u0628\\u0627\\u0634\\u062F\");\n          }\n          return \"\\u062E\\u06CC\\u0644\\u06CC \\u06A9\\u0648\\u0686\\u06A9: \".concat(issue.origin, \" \\u0628\\u0627\\u06CC\\u062F \").concat(adj).concat(issue.minimum.toString(), \" \\u0628\\u0627\\u0634\\u062F\");\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") {\n            return \"\\u0631\\u0634\\u062A\\u0647 \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0628\\u0627\\u06CC\\u062F \\u0628\\u0627 \\\"\".concat(_issue.prefix, \"\\\" \\u0634\\u0631\\u0648\\u0639 \\u0634\\u0648\\u062F\");\n          }\n          if (_issue.format === \"ends_with\") {\n            return \"\\u0631\\u0634\\u062A\\u0647 \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0628\\u0627\\u06CC\\u062F \\u0628\\u0627 \\\"\".concat(_issue.suffix, \"\\\" \\u062A\\u0645\\u0627\\u0645 \\u0634\\u0648\\u062F\");\n          }\n          if (_issue.format === \"includes\") {\n            return \"\\u0631\\u0634\\u062A\\u0647 \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0628\\u0627\\u06CC\\u062F \\u0634\\u0627\\u0645\\u0644 \\\"\".concat(_issue.includes, \"\\\" \\u0628\\u0627\\u0634\\u062F\");\n          }\n          if (_issue.format === \"regex\") {\n            return \"\\u0631\\u0634\\u062A\\u0647 \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0628\\u0627\\u06CC\\u062F \\u0628\\u0627 \\u0627\\u0644\\u06AF\\u0648\\u06CC \".concat(_issue.pattern, \" \\u0645\\u0637\\u0627\\u0628\\u0642\\u062A \\u062F\\u0627\\u0634\\u062A\\u0647 \\u0628\\u0627\\u0634\\u062F\");\n          }\n          return \"\".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format, \" \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631\");\n        }\n      case \"not_multiple_of\":\n        return \"\\u0639\\u062F\\u062F \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631: \\u0628\\u0627\\u06CC\\u062F \\u0645\\u0636\\u0631\\u0628 \".concat(issue.divisor, \" \\u0628\\u0627\\u0634\\u062F\");\n      case \"unrecognized_keys\":\n        return \"\\u06A9\\u0644\\u06CC\\u062F\".concat(issue.keys.length > 1 ? \"های\" : \"\", \" \\u0646\\u0627\\u0634\\u0646\\u0627\\u0633: \").concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"\\u06A9\\u0644\\u06CC\\u062F \\u0646\\u0627\\u0634\\u0646\\u0627\\u0633 \\u062F\\u0631 \".concat(issue.origin);\n      case \"invalid_union\":\n        return \"\\u0648\\u0631\\u0648\\u062F\\u06CC \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631\";\n      case \"invalid_element\":\n        return \"\\u0645\\u0642\\u062F\\u0627\\u0631 \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631 \\u062F\\u0631 \".concat(issue.origin);\n      default:\n        return \"\\u0648\\u0631\\u0648\\u062F\\u06CC \\u0646\\u0627\\u0645\\u0639\\u062A\\u0628\\u0631\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}