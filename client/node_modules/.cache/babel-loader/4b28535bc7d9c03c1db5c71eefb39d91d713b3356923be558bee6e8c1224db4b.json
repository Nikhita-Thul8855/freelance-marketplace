{"ast":null,"code":"/** A special constant with type `never` */\nexport const NEVER = Object.freeze({\n  status: \"aborted\"\n});\nexport /*@__NO_SIDE_EFFECTS__*/function $constructor(name, initializer, params) {\n  var _params$Parent;\n  function init(inst, def) {\n    var _inst$_zod, _a$traits;\n    var _a;\n    Object.defineProperty(inst, \"_zod\", {\n      value: (_inst$_zod = inst._zod) !== null && _inst$_zod !== void 0 ? _inst$_zod : {},\n      enumerable: false\n    });\n    (_a$traits = (_a = inst._zod).traits) !== null && _a$traits !== void 0 ? _a$traits : _a.traits = new Set();\n    inst._zod.traits.add(name);\n    initializer(inst, def);\n    // support prototype modifications\n    for (const k in _.prototype) {\n      if (!(k in inst)) Object.defineProperty(inst, k, {\n        value: _.prototype[k].bind(inst)\n      });\n    }\n    inst._zod.constr = _;\n    inst._zod.def = def;\n  }\n  // doesn't work if Parent has a constructor with arguments\n  const Parent = (_params$Parent = params === null || params === void 0 ? void 0 : params.Parent) !== null && _params$Parent !== void 0 ? _params$Parent : Object;\n  class Definition extends Parent {}\n  Object.defineProperty(Definition, \"name\", {\n    value: name\n  });\n  function _(def) {\n    var _a$deferred;\n    var _a;\n    const inst = params !== null && params !== void 0 && params.Parent ? new Definition() : this;\n    init(inst, def);\n    (_a$deferred = (_a = inst._zod).deferred) !== null && _a$deferred !== void 0 ? _a$deferred : _a.deferred = [];\n    for (const fn of inst._zod.deferred) {\n      fn();\n    }\n    return inst;\n  }\n  Object.defineProperty(_, \"init\", {\n    value: init\n  });\n  Object.defineProperty(_, Symbol.hasInstance, {\n    value: inst => {\n      var _inst$_zod2;\n      if (params !== null && params !== void 0 && params.Parent && inst instanceof params.Parent) return true;\n      return inst === null || inst === void 0 || (_inst$_zod2 = inst._zod) === null || _inst$_zod2 === void 0 || (_inst$_zod2 = _inst$_zod2.traits) === null || _inst$_zod2 === void 0 ? void 0 : _inst$_zod2.has(name);\n    }\n  });\n  Object.defineProperty(_, \"name\", {\n    value: name\n  });\n  return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n  constructor() {\n    super(\"Encountered Promise during synchronous parse. Use .parseAsync() instead.\");\n  }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n  if (newConfig) Object.assign(globalConfig, newConfig);\n  return globalConfig;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}