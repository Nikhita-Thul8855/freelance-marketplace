{"ast":null,"code":"import * as util from \"../core/util.js\";\nconst error = () => {\n  const Sizable = {\n    string: {\n      unit: \"ký tự\",\n      verb: \"có\"\n    },\n    file: {\n      unit: \"byte\",\n      verb: \"có\"\n    },\n    array: {\n      unit: \"phần tử\",\n      verb: \"có\"\n    },\n    set: {\n      unit: \"phần tử\",\n      verb: \"có\"\n    }\n  };\n  function getSizing(origin) {\n    var _Sizable$origin;\n    return (_Sizable$origin = Sizable[origin]) !== null && _Sizable$origin !== void 0 ? _Sizable$origin : null;\n  }\n  const parsedType = data => {\n    const t = typeof data;\n    switch (t) {\n      case \"number\":\n        {\n          return Number.isNaN(data) ? \"NaN\" : \"số\";\n        }\n      case \"object\":\n        {\n          if (Array.isArray(data)) {\n            return \"mảng\";\n          }\n          if (data === null) {\n            return \"null\";\n          }\n          if (Object.getPrototypeOf(data) !== Object.prototype && data.constructor) {\n            return data.constructor.name;\n          }\n        }\n    }\n    return t;\n  };\n  const Nouns = {\n    regex: \"đầu vào\",\n    email: \"địa chỉ email\",\n    url: \"URL\",\n    emoji: \"emoji\",\n    uuid: \"UUID\",\n    uuidv4: \"UUIDv4\",\n    uuidv6: \"UUIDv6\",\n    nanoid: \"nanoid\",\n    guid: \"GUID\",\n    cuid: \"cuid\",\n    cuid2: \"cuid2\",\n    ulid: \"ULID\",\n    xid: \"XID\",\n    ksuid: \"KSUID\",\n    datetime: \"ngày giờ ISO\",\n    date: \"ngày ISO\",\n    time: \"giờ ISO\",\n    duration: \"khoảng thời gian ISO\",\n    ipv4: \"địa chỉ IPv4\",\n    ipv6: \"địa chỉ IPv6\",\n    cidrv4: \"dải IPv4\",\n    cidrv6: \"dải IPv6\",\n    base64: \"chuỗi mã hóa base64\",\n    base64url: \"chuỗi mã hóa base64url\",\n    json_string: \"chuỗi JSON\",\n    e164: \"số E.164\",\n    jwt: \"JWT\",\n    template_literal: \"đầu vào\"\n  };\n  return issue => {\n    switch (issue.code) {\n      case \"invalid_type\":\n        return \"\\u0110\\u1EA7u v\\xE0o kh\\xF4ng h\\u1EE3p l\\u1EC7: mong \\u0111\\u1EE3i \".concat(issue.expected, \", nh\\u1EADn \\u0111\\u01B0\\u1EE3c \").concat(parsedType(issue.input));\n      case \"invalid_value\":\n        if (issue.values.length === 1) return \"\\u0110\\u1EA7u v\\xE0o kh\\xF4ng h\\u1EE3p l\\u1EC7: mong \\u0111\\u1EE3i \".concat(util.stringifyPrimitive(issue.values[0]));\n        return \"T\\xF9y ch\\u1ECDn kh\\xF4ng h\\u1EE3p l\\u1EC7: mong \\u0111\\u1EE3i m\\u1ED9t trong c\\xE1c gi\\xE1 tr\\u1ECB \".concat(util.joinValues(issue.values, \"|\"));\n      case \"too_big\":\n        {\n          var _issue$origin, _sizing$unit, _issue$origin2;\n          const adj = issue.inclusive ? \"<=\" : \"<\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) return \"Qu\\xE1 l\\u1EDBn: mong \\u0111\\u1EE3i \".concat((_issue$origin = issue.origin) !== null && _issue$origin !== void 0 ? _issue$origin : \"giá trị\", \" \").concat(sizing.verb, \" \").concat(adj).concat(issue.maximum.toString(), \" \").concat((_sizing$unit = sizing.unit) !== null && _sizing$unit !== void 0 ? _sizing$unit : \"phần tử\");\n          return \"Qu\\xE1 l\\u1EDBn: mong \\u0111\\u1EE3i \".concat((_issue$origin2 = issue.origin) !== null && _issue$origin2 !== void 0 ? _issue$origin2 : \"giá trị\", \" \").concat(adj).concat(issue.maximum.toString());\n        }\n      case \"too_small\":\n        {\n          const adj = issue.inclusive ? \">=\" : \">\";\n          const sizing = getSizing(issue.origin);\n          if (sizing) {\n            return \"Qu\\xE1 nh\\u1ECF: mong \\u0111\\u1EE3i \".concat(issue.origin, \" \").concat(sizing.verb, \" \").concat(adj).concat(issue.minimum.toString(), \" \").concat(sizing.unit);\n          }\n          return \"Qu\\xE1 nh\\u1ECF: mong \\u0111\\u1EE3i \".concat(issue.origin, \" \").concat(adj).concat(issue.minimum.toString());\n        }\n      case \"invalid_format\":\n        {\n          var _Nouns$_issue$format;\n          const _issue = issue;\n          if (_issue.format === \"starts_with\") return \"Chu\\u1ED7i kh\\xF4ng h\\u1EE3p l\\u1EC7: ph\\u1EA3i b\\u1EAFt \\u0111\\u1EA7u b\\u1EB1ng \\\"\".concat(_issue.prefix, \"\\\"\");\n          if (_issue.format === \"ends_with\") return \"Chu\\u1ED7i kh\\xF4ng h\\u1EE3p l\\u1EC7: ph\\u1EA3i k\\u1EBFt th\\xFAc b\\u1EB1ng \\\"\".concat(_issue.suffix, \"\\\"\");\n          if (_issue.format === \"includes\") return \"Chu\\u1ED7i kh\\xF4ng h\\u1EE3p l\\u1EC7: ph\\u1EA3i bao g\\u1ED3m \\\"\".concat(_issue.includes, \"\\\"\");\n          if (_issue.format === \"regex\") return \"Chu\\u1ED7i kh\\xF4ng h\\u1EE3p l\\u1EC7: ph\\u1EA3i kh\\u1EDBp v\\u1EDBi m\\u1EABu \".concat(_issue.pattern);\n          return \"\".concat((_Nouns$_issue$format = Nouns[_issue.format]) !== null && _Nouns$_issue$format !== void 0 ? _Nouns$_issue$format : issue.format, \" kh\\xF4ng h\\u1EE3p l\\u1EC7\");\n        }\n      case \"not_multiple_of\":\n        return \"S\\u1ED1 kh\\xF4ng h\\u1EE3p l\\u1EC7: ph\\u1EA3i l\\xE0 b\\u1ED9i s\\u1ED1 c\\u1EE7a \".concat(issue.divisor);\n      case \"unrecognized_keys\":\n        return \"Kh\\xF3a kh\\xF4ng \\u0111\\u01B0\\u1EE3c nh\\u1EADn d\\u1EA1ng: \".concat(util.joinValues(issue.keys, \", \"));\n      case \"invalid_key\":\n        return \"Kh\\xF3a kh\\xF4ng h\\u1EE3p l\\u1EC7 trong \".concat(issue.origin);\n      case \"invalid_union\":\n        return \"Đầu vào không hợp lệ\";\n      case \"invalid_element\":\n        return \"Gi\\xE1 tr\\u1ECB kh\\xF4ng h\\u1EE3p l\\u1EC7 trong \".concat(issue.origin);\n      default:\n        return \"\\u0110\\u1EA7u v\\xE0o kh\\xF4ng h\\u1EE3p l\\u1EC7\";\n    }\n  };\n};\nexport default function () {\n  return {\n    localeError: error()\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}